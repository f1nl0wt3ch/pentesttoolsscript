#!/bin/bash

# GLOBAL VARIABLES

TOOLS_ARR[0]=tor             
TOOLS_ARR[1]=nmap
TOOLS_ARR[2]=nikto
TOOLS_ARR[3]=dmitry
TOOLS_ARR[4]=fierce
TOOLS_ARR[5]=whois
TOOLS_ARR[6]=recon-ng
TOOLS_ARR[7]=websploit
TOOLS_ARR[8]=gobuster
TOOLS_ARR[9]=sslscan
TOOLS_ARR[10]=wireshark
TOOLS_ARR[11]=wpscan
TOOLS_ARR[12]=dorks-eye
TOOLS_ARR[13]=CloudFail

TMP='/tmp'
MY_TOOLS='/opt/my-tools'
WORD_LISTS='/opt/wordlists'

show_welcome_text () {

echo "#------------------------------------------------------------------------------------------------------#"
echo ""
echo "               ###############################################################"
echo "               # @Name: Auto Install Penetration Tools Script For Kali Linux #"
echo "               # @Version: 1.0.0                                             #"
echo "               # @Authors: f1nl0wt3ch                                        #"
echo "               # @CreatedDate: 02.01.2021                                    #"
echo "               ###############################################################"
echo ""
echo "#------------------------------------------------------------------------------------------------------#"

};

# FUNCTION TO CHECK APP IS ALREADY INSTALLED OR NOT
is_installed () {
  if ! command -v $command &> /dev/null 
  then
     apt-get install $command -y ;
  else
     echo  "$command is already installed.[v]" ;
  fi                                                                                                                                                                    

};

# PRINT TOOL AND ITS INSTALLED VERSION
print_version () {  
   for i in "${TOOLS_LIST[@]}";
   do
     version=("${i}" "--version");
     eval "$version";  
   done
   echo "[+] Thank you a lot for using this script and enjoy your testing :)."
   echo "[+] Much love from f1nl0wt3ch <3"  
}


clear

#---------------INITIALIZE SETTINGS------------------------------------------

if [ -d $MY_TOOLS ]; then
     rm -rf $MY_TOOLS ;
fi

if [ -d $WORD_LISTS ]; then
     rm -rf $WORD_LISTS ;
fi
show_welcome_text ;
mkdir -p $MY_TOOLS ;
echo  "Folder $MY_TOOLS is created.[v]" ;
mkdir -p $WORD_LISTS ;
echo  "Folder $WORD_LISTS is created.[v]" ;

# INSTALL RUBY
if command -v "ruby" &> /dev/null
then
   apt-get install ruby-full -y
   ruby --version
fi

apt-get install build-essential patch ruby-dev zlib1g-dev liblzma-dev
gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
curl -sSL https://get.rvm.io | bash -s stable --ruby

# INSTALL PYTHON 3
echo  "Start installing Python version 3..."
is_installed "python3" ;
python3 --version

# INSTALL PIP3
echo  "Start installing PIP3..."
is_installed "python3-pip" ;

# INSTALL CURL
echo  "Start installing Curl..."
apt-get install curl -y;  

# INSTALL IFCONFIG CMD
echo  "Start installing NET-tools..."
is_installed "net-tools" ;

#-----------------FINISHED INITIALIZATION------------------------------------

# FETCH WORD_LISTS FOR BRUTE FORCING
echo  " Fetching WORD_LISTS for brute forcing..."
if [ -d $WORD_LISTS"/bruteforce-database/.git" ]; then
        cd $WORD_LISTS"/bruteforce-database" ;
        git pull ;
else
        cd $WORD_LISTS
        git clone https://github.com/f1nl0wt3ch/bruteforce-database.git ;
fi

# INSTALL TOR
echo  "Start installing and then staring Tor..."
apt-get install tor -y
service tor start
service tor status

# INSTALL NMAP
echo  "Start installing Nmap..."
is_installed "nmap" ;

# INSTALL NIKTO
echo  "Start installing Nikto..."
is_installed "nikto" ;

# INSTALL DMITRY
echo  "Start installing Dmitry..."
is_installed "dmitry" ;

# INSTALL FIERCE
echo  "Start installing Fierce..."
is_installed "fierce" ;

# INSTALL WHOIS
echo  "Start installing Whois..."
is_installed "whois" ;

# INSTALL RECON-NG
echo  "Start installing Recon-ng..."
is_installed "recon-ng" ;

# INSTALL WEBSPLOIT
echo  "Start installing Websploit..."
is_installed "websploit" ;

# INSTALL GOBUSTER
echo  "Start installing Gobuster..."
is_installed "gobuster" ;

# INSTALL SSLSCAN
echo  "Start installing SSLscan..."
is_installed "sslscan" ;

# INSTALL WIRESHARK
echo "Start installing Wireshark..."
is_installed "Wireshark" ;

# INSTALL WPSCAN
echo  "Start installing WPscan..."
cd $TMP
wget https://rubygems.org/rubygems/rubygems-3.2.4.tgz
tar xvfz rubygems-3.2.4.tgz
if command -v "rubygems" &> /dev/null 
then
  apt-get remove rubygems ;
fi
rm rubygems*.tgz
cd rubygems* &&  ruby setup.rb
gem install nokogiri -x
gem install wpscan -x
wpscan -h 

# INSTALL GOOGLE DORKS EYE                                                                                                                                                                   
echo  "Start installing Google Dorks Eye..."
if [ -d $MY_TOOLS"/dorks-eye/.git" ]; then
        cd $MY_TOOLS"/dorks-eye" ;
        git pull ;
else
    cd $MY_TOOLS
    git clone https://github.com/BullsEye0/dorks-eye.git ;
    cd $MY_TOOLS"/dorks-eye" ;
    pip3 install -r requirements.txt ;
    echo "alias dorks-eye='python3 /opt/my-tools/dorks-eye/dorks-eye.py'" >> ~/.bashrc
    source ~/.bashrc
fi

# INSTALL CLOUDFAILD                                                                                                                                                                   
echo  "Start installing Google Dorks Eye..."
if [ -d $MY_TOOLS"/CloudFail/.git" ]; then
        cd $MY_TOOLS"/CloudFail" ;
        git pull ;
else
    cd $MY_TOOLS
    git clone https://github.com/m0rtem/CloudFail.git ;
    cd $MY_TOOLS"/CloudFail" ;
    pip3 install -r requirements.txt ;
    echo "alias cloudfail='python3 /opt/my-tools/CloudFail/cloudfail.py'" >> ~/.bashrc
    source ~/.bashrc
fi

# INSTALL METASPLOIT
echo  "Start installing Metasploit..."
cd $TMP
curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall
chmod +x msfinstall
./msfinstall
service postgresql start
msfdb init
apt install metasploit-framework
msfconsole --version

# CONCLUSION
print_version


